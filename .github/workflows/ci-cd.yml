name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: github-actions
  DOCKER_REGISTRY: docker.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # 3️⃣ Install dependencies
    - name: Install dependencies
      run: npm ci
      working-directory: ./  # adjust if your package.json is in a subfolder

    # 4️⃣ Build Docker image and push to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    # 5️⃣ Deploy to VM via SSH
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Add user to docker group if not already
          sudo groupadd -f docker
          sudo usermod -aG docker $USER || true
          newgrp docker || true

          # Pull latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:latest

          # Stop & remove old container
          docker stop github-actions || true
          docker rm github-actions || true

          # Run new container
          docker run -d --name github-actions -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/github-actions:latest
